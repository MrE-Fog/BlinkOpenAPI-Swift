//
// LoginResponse.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct LoginResponse: Codable, Hashable {

    public var account: LoginResponseAccount
    public var auth: LoginResponseAuth
    public var phone: LoginResponsePhone
    public var verification: LoginResponseVerification
    public var lockoutTimeRemaining: Int
    public var forcePasswordReset: Bool
    public var allowPinResendSeconds: Int

    public init(account: LoginResponseAccount, auth: LoginResponseAuth, phone: LoginResponsePhone, verification: LoginResponseVerification, lockoutTimeRemaining: Int, forcePasswordReset: Bool, allowPinResendSeconds: Int) {
        self.account = account
        self.auth = auth
        self.phone = phone
        self.verification = verification
        self.lockoutTimeRemaining = lockoutTimeRemaining
        self.forcePasswordReset = forcePasswordReset
        self.allowPinResendSeconds = allowPinResendSeconds
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case account
        case auth
        case phone
        case verification
        case lockoutTimeRemaining = "lockout_time_remaining"
        case forcePasswordReset = "force_password_reset"
        case allowPinResendSeconds = "allow_pin_resend_seconds"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(account, forKey: .account)
        try container.encode(auth, forKey: .auth)
        try container.encode(phone, forKey: .phone)
        try container.encode(verification, forKey: .verification)
        try container.encode(lockoutTimeRemaining, forKey: .lockoutTimeRemaining)
        try container.encode(forcePasswordReset, forKey: .forcePasswordReset)
        try container.encode(allowPinResendSeconds, forKey: .allowPinResendSeconds)
    }
}

