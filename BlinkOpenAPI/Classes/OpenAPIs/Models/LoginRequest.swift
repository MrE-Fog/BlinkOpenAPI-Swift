//
// LoginRequest.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct LoginRequest: Codable, JSONEncodable, Hashable {

    public var uniqueId: String?
    public var password: String
    public var email: String
    public var clientName: String?
    public var appVersion: String?
    public var reauth: Bool?
    public var deviceIdentifier: String?

    public init(uniqueId: String? = nil, password: String, email: String, clientName: String? = nil, appVersion: String? = nil, reauth: Bool? = nil, deviceIdentifier: String? = nil) {
        self.uniqueId = uniqueId
        self.password = password
        self.email = email
        self.clientName = clientName
        self.appVersion = appVersion
        self.reauth = reauth
        self.deviceIdentifier = deviceIdentifier
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case uniqueId = "unique_id"
        case password
        case email
        case clientName = "client_name"
        case appVersion = "app_version"
        case reauth
        case deviceIdentifier = "device_identifier"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(uniqueId, forKey: .uniqueId)
        try container.encode(password, forKey: .password)
        try container.encode(email, forKey: .email)
        try container.encodeIfPresent(clientName, forKey: .clientName)
        try container.encodeIfPresent(appVersion, forKey: .appVersion)
        try container.encodeIfPresent(reauth, forKey: .reauth)
        try container.encodeIfPresent(deviceIdentifier, forKey: .deviceIdentifier)
    }
}

